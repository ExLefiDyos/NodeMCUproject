#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <Wire.h>
#include <Servo.h>

#define SOUND_VELOCITY 0.034

const char* ssid = "Raijin";
const char* password = "punyamufti";

const int trigPin = D6;
const int echoPin = D5;
int photoPin = A0;
int photoValue;
int photoThreshold = 100; // Adjust this value as needed
int servoPin = D1;

ESP8266WebServer server(80);
Servo myservo;

void setup() {
  Serial.begin(115200);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
   Serial.print("Local IP: ");
  Serial.println(WiFi.localIP());

  myservo.attach(servoPin);

  server.on("/", handleRoot);
  server.on("/distance", handleDistance);
  server.on("/lock", handleLock);
  server.on("/unlock", handleUnlock);

  server.begin();
  Serial.println("HTTP server started");

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(photoPin, INPUT);
}

void loop() {
  server.handleClient();

  int photoValue = analogRead(photoPin);
  float distanceCm = getDistance();

  if (distanceCm < 10 || photoValue > 800) {
    server.send(200, "text/html", "<p>ALERT</p>");
  }
}

float getDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duration = pulseIn(echoPin, HIGH);
  float distanceCm = (duration/2) * SOUND_VELOCITY;

  return distanceCm;
}

void handleDistance() {
  float distanceCm = getDistance();
  
  if (distanceCm < 10) {
    server.send(200, "text/plain", "ALERT");
  } else {
    server.send(200, "text/plain", String(distanceCm));
  }
}

void handleRoot() {
  String message = "<html><head><title>Ultrasonic Sensor</title>";
  message += "<script type='text/javascript'>\n";
   message += "setInterval(getData, 500);\n";
  message += "function getData() {\n";
  message += "var xhttp = new XMLHttpRequest();\n";
  message += "xhttp.onreadystatechange = function() {\n";
  message += "if (this.readyState == 4 && this.status == 200) {\n";
  message += "document.getElementById('distance').innerHTML = this.responseText;\n";
  message += "}\n";
  message += "};\n";
  message += "xhttp.open('GET', '/distance', true);\n";
  message += "xhttp.send();\n";
  message += "}\n";
  message += "function lockServo() {\n";
  message += "var xhttp = new XMLHttpRequest();\n";
  message += "xhttp.open('GET', '/lock', true);\n";
  message += "xhttp.send();\n";
  message += "}\n";
  message += "function unlockServo() {\n";
  message += "var xhttp = new XMLHttpRequest();\n";
  message += "xhttp.open('GET', '/unlock', true);\n";
  message += "xhttp.send();\n";
  message += "}\n";
  message += "</script></head><body>";
  message += "<h1>Ultrasonic Sensor</h1>";
    message += "<p>Distance: <span id='distance'></span> cm</p>";
  message += "<button onclick='lockServo()'>Lock Servo</button>";
  message += "<button onclick='unlockServo()'>Unlock Servo</button>";
  message += "</body></html>";
  
  server.send(200, "text/html", message);
}

void handleLock() {
  myservo.write(180);
  server.send(200, "text/plain", "Servo locked");
}

void handleUnlock() {
  myservo.write(0);
  server.send(200, "text/plain", "Servo unlocked");
}

